% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/animate.R
\name{animation_opts}
\alias{animation_opts}
\title{Animation options}
\usage{
animation_opts(p, frameDuration = 500, transitionDuration = frameDuration,
  easing = "cubic-in-out", redraw = FALSE, mode = "immediate")
}
\arguments{
\item{p}{a plotly object.}

\item{frameDuration}{The amount of time between frames (in milliseconds).
Note that this amount should include the \code{transitionDuration}.}

\item{transitionDuration}{The duration of the smooth transition between
frames (in milliseconds).}

\item{easing}{The type of transition easing. See the list of options here
\url{https://github.com/plotly/plotly.js/blob/master/src/plots/animation_attributes.js}}

\item{redraw}{Trigger a redraw of the plot at completion of the transition?
A redraw may significantly impact performance, but may be necessary to 
update plot attributes that can't be transitioned.}

\item{mode}{Describes how a new animate call interacts with currently-running
animations. If `immediate`, current animations are interrupted and
the new animation is started. If `next`, the current frame is allowed
to complete, after which the new animation is started. If `afterall`
all existing frames are animated to completion before the new animation
is started.}
}
\description{
Animation options
}
\examples{


df <- data.frame(
  x = c(1, 2, 2, 1, 1, 2),
  y = c(1, 2, 2, 1, 1, 2),
  z = c(1, 1, 2, 2, 3, 3)
)
plot_ly(df) \%>\% 
  add_markers(x = 1.5, y = 1.5) \%>\%
  add_markers(x = ~x, y = ~y, frame = ~z)


# it's a good idea to remove smooth transitions when there is 
# no relationship between objects in each view
plot_ly(mtcars, x = ~wt, y = ~mpg, frame = ~cyl) \%>\%
  animation_opts(transitionDuration = 0)
 
# works the same way with ggplotly
p <- ggplot(txhousing, aes(month, median)) + 
  geom_smooth() +
  geom_line(aes(frame = year, ids = month)) + 
  facet_wrap(~ city)
 
ggplotly(p, width = 1000, height = 500) \%>\% 
  animation_slider(hide = TRUE)

# use the ids attribute to ensure object constancy
if (require("gapminder")) {
  p <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, 
    color = continent, frame = year, ids = country)) +
    geom_point() +
    scale_x_log10()
  ggplotly(p)
  
  p2 <- ggplot(gapminder, aes(gdpPercap, lifeExp)) +
    geom_point(aes(size = pop), alpha = 0.5) +
    # animations can be specified on the layer level
    geom_point(aes(size = pop, frame = year, ids = country), color = "red") +
    scale_x_log10()
  ggplotly(p2)
}

}
\author{
Carson Sievert
}
\seealso{
\code{\link{animation_slider}()}, \code{\link{animation_button}()}
}

