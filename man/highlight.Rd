% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/highlight.R
\name{highlight}
\alias{highlight}
\title{Highlight graphical elements in multiple linked views}
\usage{
highlight(p, on = "plotly_selected", off = "plotly_relayout",
  persistent = FALSE, dynamic = FALSE, color = NULL, selectize = FALSE,
  defaultValues = NULL, opacityDim = 0.2, hoverinfo = "none",
  showInLegend = FALSE)
}
\arguments{
\item{p}{a plotly visualization.}

\item{on}{turn on a selection on which event(s)? Likely candidates are
'plotly_hover', 'plotly_click', 'plotly_selected'.}

\item{off}{turn off a selection on which event(s)? Likely candidates are
'plotly_unhover', 'plotly_doubleclick', 'plotly_deselect'.}

\item{persistent}{should selections persist (i.e., accumulate)?}

\item{dynamic}{should UI controls for changing selection colors be 
included in the output?}

\item{color}{character string of color(s) to use for 
highlighting selections. See \code{\link{toRGB}()} for valid color
specifications. If \code{NULL} (the default), the color of selected marks
are not altered (only their opacity).}

\item{selectize}{provide a selectize.js widget for selecting keys? Note that 
the label used for this widget derives from the groupName of the SharedData object.}

\item{defaultValues}{a vector of values for setting a "default selection".
These values should match the key attribute.}

\item{opacityDim}{a number between 0 and 1 used to reduce the
opacity of non-selected traces (by multiplying with the existing opacity).}

\item{hoverinfo}{hoverinfo attributes for the non-selected traces.}

\item{showInLegend}{populate an additional legend entry for the selection?}
}
\description{
For documentation and examples, see 
\url{https://cpsievert.github.io/plotly_book/linking-views-without-shiny.html}
}
\examples{

library(crosstalk)
d <- SharedData$new(txhousing, ~city)
p <- ggplot(d, aes(date, median, group = city)) + geom_line()
ggplotly(p, tooltip = "city") \%>\%
  highlight(on = "plotly_hover", color = "red")
  
# The group name is currently used to populate a title for the selectize widget
sd <- SharedData$new(txhousing, ~city, "Choose a city")
plot_ly(sd, x = ~date, y = ~median) \%>\%
  add_lines(text = ~city, hoverinfo = "text") \%>\%
  highlight(on = "plotly_hover", persistent = TRUE, selectize = TRUE)

}

